// 简述Tank的构造过程

// 弃用了RF传统储罐类型 为合适类型创建副本
// 为创建形如ROT-blah储罐类型 只需要增加wantROTankType
// 详细参见ROTanks.cfg

// 步骤1 BEFORE[RealismOverhaul] 根据现有类型 决定它们衍生出的储罐类型 有fuel sm ballon
// 例如：
// @PART[ROT-GenericTank]:BEFORE[RealismOverhaul]
// {
// 	wantROTankTypes = fuel sm balloon
// }
// 这意味着ROT-GenericTank之后会产生三种储罐类型

// BEFORE[RealismOverhaul] 根据衍生储罐类型 决定其名字
// ROT-GenericTank的衍生叫做ROT-BalloonTank-New ROT-ServiceModule
// ROT-LanderTank的是ROT-LanderTank-SM
// 其余的衍生是$name$-ServiceModule和#$name$-Balloon

// 步骤2 创建这些储罐 赋值name title roTankType
// 例如：
// +PART[ROT-*]:HAS[#wantROTankTypes[*balloon*],~roTankType]:BEFORE[RealismOverhaul]
// {
// 	@name = #$balloonName$
// 	@title ^= :$: (Balloon)
// 	%roTankType = balloon
// }
// 这里一共有五种类型 balloon sm(service) shielded(spaceplane) fuel(integral/conventional)

// 步骤3 BEFORE[RealismOverhaul] 删掉wantROTankTypes balloonName smName

// ======

// description是根据roTankType写的 FOR[RealismOverhaulTankTypes]
// 参见RealismOverhaul/RO_RealFuels_PartConfigs.cfg
// 写完description后删除roTankType

// ======

// 我现在认为的处理办法
// 储罐原名在创建后 在BEFORE[RealismOverhaul]之前把名字改掉
// 在BEFORE[RealismOverhaul]后补一个类型 或者删掉末尾若干字符 补一个类型

@PART:HAS[#xyzroTankType[balloon]]:FOR[RealismOverhaulZZZTankTypes]
{
    @title ^= :$: 气球
}

@PART:HAS[#xyzroTankType[integral]]:FOR[RealismOverhaulZZZTankTypes]
{
    @title ^= :$: Isogrid结构
}

@PART:HAS[#xyzroTankType[conventional]]:FOR[RealismOverhaulZZZTankTypes]
{
    @title ^= :$: 常规结构
}

@PART:HAS[#xyzroTankType[service]]:FOR[RealismOverhaulZZZTankTypes]
{
    @title ^= :$: 服务模块
}

@PART:HAS[#xyzroTankType[spaceplane]]:FOR[RealismOverhaulZZZTankTypes]
{
    @title ^= :$: 带防护罩
}

// 其实这几个放在RO_RealFuels_PartConfigs.cfg的汉化Patch里也行啊...